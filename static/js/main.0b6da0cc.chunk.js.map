{"version":3,"sources":["components/ContactForm/ContactForm.module.css","transitions/slide.module.css","transitions/slideError.module.css","components/Filter/Filter.module.css","transitions/pop.module.css","components/App.module.css","redux/contactsReducer.js","redux/actionTypes.js","redux/filterReducer.js","redux/store.js","redux/actions.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/ContactsList/ContactItem.js","components/ContactsList/ContactsList.js","components/ContactsList/ContactsListContainer.js","components/App.js","components/AppContainer.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","contactsReducer","createReducer","id","name","number","state","action","payload","filter","contact","filterReducer","store","configureStore","reducer","contacts","addContact","createAction","removeContact","changeFilter","Notification","className","ContactForm","error","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","find","toLowerCase","resetState","setTimeout","uuidv4","this","s","contactForm","contactFormInput","type","onChange","contactFormButton","CSSTransition","in","timeout","classNames","slideErrorTransition","unmountOnExit","Component","connect","dispatch","Filter","ContactsItem","onDelete","button","onClick","x1","y1","x2","y2","stroke","strokeWidth","ContactsList","filteredContacts","children","randerContacts","TransitionGroup","component","contactsList","map","key","slideTransition","contactsListItem","App","headerAppear","show","includes","filterContacts","heading","length","popTransition","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,sCAAsC,kBAAoB,yC,mBCA9ID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,WAAa,4B,mBCAhID,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,YAAc,gCAAgC,KAAO,yBAAyB,WAAa,iC,mBCA/ID,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,YAAc,yBAAyB,KAAO,kBAAkB,WAAa,0B,mBCA1HD,EAAOC,QAAU,CAAC,QAAU,uB,4JC4BbC,EANSC,YApBH,CACnB,CACEC,GAAI,uCACJC,KAAM,iBACNC,OAAQ,WAEV,CACEF,GAAI,uCACJC,KAAM,YACNC,OAAQ,WAEV,CACEF,GAAI,uCACJC,KAAM,UACNC,OAAQ,aAMyB,mBCvBV,eDwBJ,SAACC,EAAOC,GAAR,4BAAuBD,GAAvB,CAA8BC,EAAOC,aADvB,cCtBP,kBDwBJ,SAACF,EAAOC,GAAR,OACtBD,EAAMG,QAAO,SAACC,GAAD,OAAaA,EAAQP,KAAOI,EAAOC,QAAQL,SAHvB,IEdtBQ,EAJOT,YAAc,GAAD,eDHN,iBCIJ,SAACI,EAAOC,GAAR,OAAmBA,EAAOC,YCOpCI,EAJDC,YAAe,CAC3BC,QAAS,CAAEC,SAAUd,EAAiBQ,OAAQE,K,+CCJnCK,EAAaC,YHNC,eGOdC,EAAgBD,YHNC,kBGOjBE,EAAeF,YHNC,iBIWdG,G,MAVM,WACnB,OACE,yBAAKC,UAAU,0BACb,wBAAIA,UAAU,qCAAd,6B,0CCKeC,E,4MAMnBhB,MAAQ,CAAEF,KAAM,GAAIC,OAAQ,GAAIkB,OAAO,G,EAMvCC,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,OAAlBtB,EADY,EACZA,KAAMuB,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBxB,EAAOuB,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBADkB,MAGK,EAAKxB,MAAtBF,EAHY,EAGZA,KAAMC,EAHM,EAGNA,OAHM,EAIW,EAAK0B,MAA5BhB,EAJY,EAIZA,SAAUiB,EAJE,EAIFA,SAElB,GAAK5B,EAAL,CAEA,GACEW,EAASkB,MACP,SAACvB,GAAD,OAAaA,EAAQN,KAAK8B,gBAAkB9B,EAAK8B,iBAMnD,OAHA,EAAKN,SAAS,CAAEL,OAAO,IACvB,EAAKY,kBACLC,YAAW,kBAAM,EAAKR,SAAS,CAAEL,OAAO,MAAU,KAIpD,IAAMpB,EAAKkC,cAEXL,EAAS,CAAE5B,OAAMC,SAAQF,OAEzB,EAAKgC,e,2DA/BLG,KAAKV,SAAS,CAAExB,KAAM,GAAIC,OAAQ,O,+BAmClC,OACE,6BACE,0BAAMgB,UAAWkB,IAAEC,YAAaR,SAAUM,KAAKT,cAC7C,2BAAOR,UAAWkB,IAAEE,kBAClB,sCACA,2BACEC,KAAK,OACLtC,KAAK,OACLuB,MAAOW,KAAKhC,MAAMF,KAClBuC,SAAUL,KAAKd,gBAGnB,2BAAOH,UAAWkB,IAAEE,kBAClB,wCACA,2BACEC,KAAK,SACLtC,KAAK,SACLuB,MAAOW,KAAKhC,MAAMD,OAClBsC,SAAUL,KAAKd,gBAGnB,4BAAQH,UAAWkB,IAAEK,kBAAmBF,KAAK,UAA7C,gBAKF,kBAACG,EAAA,EAAD,CACEC,GAAIR,KAAKhC,MAAMiB,MACfwB,QAAS,IACTC,WAAYC,IACZC,eAAa,GAEb,kBAAC,EAAD,Y,GA5E+BC,aCD1BC,eANS,SAAC,GAAD,MAAmB,CAAErC,SAArB,EAAGA,aAEA,SAACsC,GAAD,MAAe,CACxCrB,SAAU,SAAC5B,EAAMC,EAAQF,GAAf,OAAsBkD,EAASrC,EAAWZ,EAAMC,EAAQF,QAGrDiD,CAA6C9B,G,iBCM7CgC,EAZA,SAAC,GAAD,IAAG7C,EAAH,EAAGA,OAAQkC,EAAX,EAAWA,SAAX,OACb,2BAAOtB,UAAWkB,IAAE9B,QAApB,uBAEE,2BAAOiC,KAAK,OAAOf,MAAOlB,EAAQkC,SAAUA,MCKjCS,eARS,SAAC,GAAD,MAAiB,CAAE3C,OAAnB,EAAGA,WAEA,SAAC4C,GAAD,MAAe,CACxCV,SAAU,SAAClB,GACT4B,EAASlC,EAAaM,EAAEC,OAAOC,YAIpByB,CAA6CE,G,wBCa7CC,EArBM,SAAC,GAAgC,IAA9BnD,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQmD,EAAe,EAAfA,SACpC,OACE,kBAAC,WAAD,KACE,0BAAMnC,UAAWkB,IAAEnC,MAAOA,GAC1B,0BAAMiB,UAAWkB,IAAElC,QAASA,GAC5B,4BAAQgB,UAAWkB,IAAEkB,OAAQf,KAAK,SAASgB,QAASF,GAClD,6BACE,0BAAMG,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,OAAO,QAAQC,YAAY,MAC/D,0BAAML,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,OAAO,QAAQC,YAAY,U,iBCiD1DC,EArDM,SAAC,GAMf,IALLlD,EAKI,EALJA,SACAmD,EAII,EAJJA,iBACAzD,EAGI,EAHJA,OACA+C,EAEI,EAFJA,SACAW,EACI,EADJA,SAEMC,EAAkB3D,EAAoByD,EAAXnD,EAEjC,OACE,kBAAC,WAAD,KACGoD,EAED,kBAACE,EAAA,EAAD,CAAiBC,UAAU,KAAKjD,UAAWkB,IAAEgC,cAC1CH,EAAeI,KAAI,SAAC9D,GAAD,OAClB,kBAACmC,EAAA,EAAD,CACE4B,IAAK/D,EAAQP,GACb4C,QAAS,IACTC,WAAY0B,IACZxB,eAAa,GAEb,wBAAI7B,UAAWkB,IAAEoC,kBACf,kBAAC,EAAD,iBACMjE,EADN,CAEE8C,SAAU,kBAAMA,EAAS9C,EAAQP,gBCpBlCiD,eARS,SAAC,GAAD,MAA2B,CAAErC,SAA7B,EAAGA,SAAoCN,OAAvC,EAAaA,WAEV,SAAC4C,GAAD,MAAe,CACxCG,SAAU,SAACrD,GACTkD,EAASnC,EAAc,CAAEf,YAIdiD,CAA6Ca,G,0CCMvCW,E,4MACnBtE,MAAQ,CACNuE,cAAc,G,kEAIdvC,KAAKV,SAAS,CAAEkD,MAAM,M,+BAGd,IACAD,EAAiBvC,KAAKhC,MAAtBuE,aADD,EAEsBvC,KAAKP,MAA1BhB,EAFD,EAECA,SAEFmD,EAnBa,SAACnD,EAAUN,GAChC,OAAOM,EAASN,QAAO,SAACC,GAAD,OACrBA,EAAQN,KAAK8B,cAAc6C,SAAStE,EAAOyB,kBAiBlB8C,CAAejE,EAJjC,EAEWN,QAIlB,OACE,kBAAC,WAAD,KACE,kBAACoC,EAAA,EAAD,CACEC,GAAI+B,EACJ9B,QAAS,IACTC,WAAY0B,KAEZ,wBAAIrD,UAAWkB,IAAE0C,SAAjB,cAGF,kBAAC,EAAD,MACClE,EAASmE,QAAU,GAClB,kBAAC,EAAD,CAAchB,iBAAkBA,GAC9B,kBAACrB,EAAA,EAAD,CACEC,GAAI/B,EAASmE,QAAU,EACvBnC,QAAS,IACTC,WAAYmC,IACZjC,eAAa,GAEb,kBAAC,EAAD,a,GAlCmBC,aCblBC,eAFS,SAAC,GAAD,MAA2B,CAAErC,SAA7B,EAAGA,SAAoCN,OAAvC,EAAaA,UAEtB2C,CAAyBwB,GCGxCQ,IAASC,OACP,kBAAC,IAAD,CAAUzE,MAAOA,GACf,kBAAC,EAAD,OAEF0E,SAASC,eAAe,U,kBCX1BxF,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,uCAAuC,KAAO,2BAA2B,OAAS,6BAA6B,OAAS,gC","file":"static/js/main.0b6da0cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__hKcEn\",\"contactFormInput\":\"ContactForm_contactFormInput__1u8DR\",\"contactFormButton\":\"ContactForm_contactFormButton__3a80R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3cwwi\",\"enterActive\":\"slide_enterActive__2vgoO\",\"exit\":\"slide_exit__37Tu9\",\"exitActive\":\"slide_exitActive__2aOWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideError_enter__1TpGX\",\"enterActive\":\"slideError_enterActive__2NkWj\",\"exit\":\"slideError_exit__2HWvx\",\"exitActive\":\"slideError_exitActive__3hde4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1ffWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__u1bt6\",\"enterActive\":\"pop_enterActive__dfO4v\",\"exit\":\"pop_exit__1Oio8\",\"exitActive\":\"pop_exitActive__1VXe3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"App_heading__25itV\"};","import * as Types from \"./actionTypes\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst initContacts = [\n  {\n    id: \"611a6308-e6f2-4506-b4cc-266e5951ab27\",\n    name: \"Annie Copeland\",\n    number: \"5555555\",\n  },\n  {\n    id: \"cbc75291-de64-44c1-a0f9-36e7f0e450de\",\n    name: \"Jim Black\",\n    number: \"5555555\",\n  },\n  {\n    id: \"a39e6b5b-91c3-4a14-b16f-a63cb88c90cb\",\n    name: \"Rod Tos\",\n    number: \"5555555\",\n  },\n];\n\n// {{{{{{{{{{{{{{{after \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\nconst contactsReducer = createReducer(initContacts, {\n  [Types.ADD_CONTACT]: (state, action) => [...state, action.payload],\n  [Types.REMOVE_CONTACT]: (state, action) =>\n    state.filter((contact) => contact.id !== action.payload.id),\n});\n\nexport default contactsReducer;\n\n// {{{{{{{{{{{{{{{before \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\n// const contactsReducer = (state = initContacts, { type, payload }) => {\n//   switch (type) {\n//     case Types.ADD_CONTACT:\n//       return [...state, payload];\n\n//     case Types.REMOVE_CONTACT:\n//       return state.filter((contact) => contact.id !== payload.id);\n\n//     default:\n//       return state;\n//   }\n// };\n","export const ADD_CONTACT = \"ADD_CONTACT\";\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\";\nexport const CHANGE_FILTER = \"CHANGE_FILTER\";\n","import * as Types from \"./actionTypes\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\n// {{{{{{{{{{{{{{{after \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\nconst filterReducer = createReducer(\"\", {\n  [Types.CHANGE_FILTER]: (state, action) => action.payload,\n});\n\nexport default filterReducer;\n\n// {{{{{{{{{{{{{{{before \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\n// const filterReducer = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case Types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","// import { combineReducers } from \"redux\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport contactsReducer from \"./contactsReducer\";\nimport filterReducer from \"./filterReducer\";\n\n// {{{{{{{{{{{{{{{after \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer, filter: filterReducer },\n});\n\nexport default store;\n\n// {{{{{{{{{{{{{{{before \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n\n// const store = createStore(rootReducer, devToolsEnhancer());\n\n// export default store;\n","// import { v4 as uuidv4 } from \"uuid\";\nimport * as Types from \"./actionTypes\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\n// {{{{{{{{{{{{{{{after \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\nexport const addContact = createAction(Types.ADD_CONTACT);\nexport const removeContact = createAction(Types.REMOVE_CONTACT);\nexport const changeFilter = createAction(Types.CHANGE_FILTER);\n\n// {{{{{{{{{{{{{{{before \"@reduxjs/toolkit\"}}}}}}}}}}}}}}}\n\n// export const addContact = (contact) => ({\n//   type: Types.ADD_CONTACT,\n//   payload: {\n//     id: uuidv4(),\n//     ...contact,\n//   },\n// });\n\n// export const removeContact = (id) => ({\n//   type: Types.REMOVE_CONTACT,\n//   payload: {\n//     id,\n//   },\n// });\n\n// export const changeFilter = (value) => ({\n//   type: Types.CHANGE_FILTER,\n//   payload: value,\n// });\n","import React from \"react\";\nimport \"react-notifications/lib/notifications.css\";\n\nconst Notification = () => {\n  return (\n    <div className=\"notification-container\">\n      <h1 className=\"notification  notification-error \">\n        Contact already exist!\n      </h1>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Notification from \"../Notification/Notification\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport s from \"../ContactForm/ContactForm.module.css\";\nimport slideErrorTransition from \"../../transitions/slideError.module.css\";\nimport \"react-notifications/lib/notifications.css\";\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = { name: \"\", number: \"\", error: false };\n\n  resetState() {\n    this.setState({ name: \"\", number: \"\" });\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n    const { contacts, onSubmit } = this.props;\n\n    if (!name) return;\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      this.setState({ error: true });\n      this.resetState();\n      setTimeout(() => this.setState({ error: false }), 2000);\n      return;\n    }\n\n    const id = uuidv4();\n\n    onSubmit({ name, number, id });\n\n    this.resetState();\n  };\n\n  render() {\n    return (\n      <div>\n        <form className={s.contactForm} onSubmit={this.handleSubmit}>\n          <label className={s.contactFormInput}>\n            <span>Name</span>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.contactFormInput}>\n            <span>Number</span>\n            <input\n              type=\"number\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.contactFormButton} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n\n        <CSSTransition\n          in={this.state.error}\n          timeout={250}\n          classNames={slideErrorTransition}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/actions\";\nimport ContactForm from \"./ContactForm\";\n\nconst mapStateToProps = ({ contacts }) => ({ contacts });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number, id) => dispatch(addContact(name, number, id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ filter, onChange }) => (\n  <label className={s.filter}>\n    Find contact by name\n    <input type=\"text\" value={filter} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/actions\";\nimport Filter from \"./Filter\";\n\nconst mapStateToProps = ({ filter }) => ({ filter });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => {\n    dispatch(changeFilter(e.target.value));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsItem = ({ name, number, onDelete }) => {\n  return (\n    <Fragment>\n      <span className={s.name}>{name}</span>\n      <span className={s.number}>{number}</span>\n      <button className={s.button} type=\"button\" onClick={onDelete}>\n        <svg>\n          <line x1=\"1\" y1=\"1\" x2=\"13\" y2=\"13\" stroke=\"white\" strokeWidth=\"3\" />\n          <line x1=\"13\" y1=\"1\" x2=\"1\" y2=\"13\" stroke=\"white\" strokeWidth=\"3\" />\n        </svg>\n      </button>\n    </Fragment>\n  );\n};\n\nContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsItem;\n","import React, { Fragment } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nimport ContactsItem from \"./ContactItem\";\nimport slideTransition from \"../../transitions/slide.module.css\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsList = ({\n  contacts,\n  filteredContacts,\n  filter,\n  onDelete,\n  children,\n}) => {\n  const randerContacts = !filter ? contacts : filteredContacts;\n\n  return (\n    <Fragment>\n      {children}\n\n      <TransitionGroup component=\"ul\" className={s.contactsList}>\n        {randerContacts.map((contact) => (\n          <CSSTransition\n            key={contact.id}\n            timeout={250}\n            classNames={slideTransition}\n            unmountOnExit\n          >\n            <li className={s.contactsListItem}>\n              <ContactsItem\n                {...contact}\n                onDelete={() => onDelete(contact.id)}\n              />\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nContactsList.propTypes = {\n  children: PropTypes.node,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n  onDelete: PropTypes.func,\n};\n\nexport default ContactsList;\n","import { connect } from \"react-redux\";\nimport { removeContact } from \"../../redux/actions\";\nimport ContactsList from \"./ContactsList\";\n\nconst mapStateToProps = ({ contacts, filter }) => ({ contacts, filter });\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => {\n    dispatch(removeContact({ id }));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React, { Component, Fragment } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport ContactForm from \"./ContactForm/ContactFormContainer\";\nimport Filter from \"./Filter/FilterContainer\";\nimport ContactsList from \"./ContactsList/ContactsListContainer\";\n\nimport \"../index.css\";\nimport slideTransition from \"../transitions/slide.module.css\";\nimport popTransition from \"../transitions/pop.module.css\";\nimport s from \"./App.module.css\";\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    headerAppear: false,\n  };\n\n  componentDidMount() {\n    this.setState({ show: true });\n  }\n\n  render() {\n    const { headerAppear } = this.state;\n    const { contacts, filter } = this.props;\n\n    const filteredContacts = filterContacts(contacts, filter);\n\n    return (\n      <Fragment>\n        <CSSTransition\n          in={headerAppear}\n          timeout={500}\n          classNames={slideTransition}\n        >\n          <h2 className={s.heading}>Phonebook</h2>\n        </CSSTransition>\n\n        <ContactForm />\n        {contacts.length >= 1 && (\n          <ContactsList filteredContacts={filteredContacts}>\n            <CSSTransition\n              in={contacts.length >= 2}\n              timeout={250}\n              classNames={popTransition}\n              unmountOnExit\n            >\n              <Filter />\n            </CSSTransition>\n          </ContactsList>\n        )}\n      </Fragment>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\n\nconst mapStateToProps = ({ contacts, filter }) => ({ contacts, filter });\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/AppContainer\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__1zM-c\",\"contactsListItem\":\"ContactsList_contactsListItem__2Uavu\",\"name\":\"ContactsList_name__2_6VZ\",\"number\":\"ContactsList_number__u-oM9\",\"button\":\"ContactsList_button__3T-5j\"};"],"sourceRoot":""}